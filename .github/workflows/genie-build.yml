jobs:
  build:
    env:
      DOCKER_PASSWORD: ${{ secrets.ORG_NETFLIXOSS_DOCKERHUB_PASSWORD }}
      DOCKER_USER: ${{ secrets.ORG_NETFLIXOSS_DOCKERHUB_USERNAME }}
      GRADLE_OPTS: -Djava.io.tmpdir=/tmp/
      GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}
      GRGIT_USER: ${{ secrets.GRGIT_USER }}
      NETFLIX_OSS_REPO_PASSWORD: ${{ secrets.ORG_NETFLIXOSS_PASSWORD }}
      NETFLIX_OSS_REPO_USERNAME: ${{ secrets.ORG_NETFLIXOSS_USERNAME }}
      NETFLIX_OSS_SIGNING_KEY: ${{ secrets.ORG_SIGNING_KEY }}
      NETFLIX_OSS_SIGNING_PASSWORD: ${{ secrets.ORG_SIGNING_PASSWORD }}
      NETFLIX_OSS_SONATYPE_PASSWORD: ${{ secrets.ORG_SONATYPE_PASSWORD }}
      NETFLIX_OSS_SONATYPE_USERNAME: ${{ secrets.ORG_SONATYPE_USERNAME }}
    name: Gradle Build
    runs-on: self-hosted
    services:
      mysql:
        env:
          MYSQL_DATABASE: genie
          MYSQL_ROOT_PASSWORD: password
        image: mysql:8.0
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s
          --health-retries=5
        ports:
        - 3306:3306
      postgres:
        env:
          POSTGRES_DB: genie
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        image: postgres:10
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
    steps:
    - continue-on-error: true
      uses: actions/checkout@v1
    - continue-on-error: true
      name: Configure MySQL database
      run: '"${{ format(''{0}/.github/configure-mysql.sh'', github.workspace) }}"

        '
    - continue-on-error: true
      name: Configure Genie temp folders
      run: 'mkdir -p /tmp/genie/cache /tmp/genie/archives /tmp/genie/jobs

        '
    - continue-on-error: true
      name: Setup jdk 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - continue-on-error: true
      id: gradle-cache
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/dependency-locks/*.lockfile')
          }}
        path: ~/.gradle/caches
        restore-keys: '- ${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      id: gradle-wrapper-cache
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-gradlewrapper-${{ hashFiles('gradle/wrapper/*') }}
        path: ~/.gradle/wrapper
        restore-keys: '- ${{ runner.os }}-gradlewrapper-

          '
    - continue-on-error: true
      id: genie-ui-node-modules
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-genie-ui-node-modules-${{ hashFiles('genie-ui/node_modules/*')
          }}
        path: genie-ui/node_modules/
        restore-keys: '- ${{ runner.os }}-genie-ui-node-modules-

          '
    - continue-on-error: true
      id: genie-ui-gradle-nodejs
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-genie-ui-gradle-nodejs-${{ hashFiles('genie-ui/.gradle/nodejs/*')
          }}
        path: genie-ui/.gradle/nodejs
        restore-keys: '- ${{ runner.os }}-genie-ui-gradle-nodejs-

          '
    - continue-on-error: true
      id: genie-ui-gradle-npm
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-genie-ui-gradle-npm-${{ hashFiles('genie-ui/.gradle/npm/*')
          }}
        path: genie-ui/.gradle/npm
        restore-keys: '- ${{ runner.os }}-genie-ui-gradle-npm-

          '
    - continue-on-error: true
      if: 'github.event_name == ''pull_request'' ||

        ((!startsWith(github.ref, ''refs/tags/v'')) && github.ref != ''refs/heads/master''
        && github.ref != ''refs/heads/dev-snapshot'')

        '
      name: Build pull request
      run: './gradlew --stacktrace build codeCoverageReport coveralls

        INTEGRATION_TEST_DB=mysql ./gradlew --stacktrace genie-web:integrationTest

        INTEGRATION_TEST_DB=postgresql ./gradlew --stacktrace genie-web:integrationTest

        ./gradlew --stacktrace javadoc asciidoc dockerBuildAllImages

        '
    - continue-on-error: true
      if: '(!startsWith(github.ref, ''refs/tags/v'')) &&

        github.event_name != ''pull_request'' &&

        github.ref == ''refs/heads/master''

        '
      name: Publish snapshot
      run: ./gradlew build snapshot codeCoverageReport coveralls gitPublishPush dockerPush
    - continue-on-error: true
      if: '(!startsWith(github.ref, ''refs/tags/v'')) &&

        github.event_name != ''pull_request'' &&

        github.ref == ''refs/heads/dev-snapshot''

        '
      name: Publish snapshot (dev-snapshot branch)
      run: ./gradlew build snapshot dockerPush -x check
    - continue-on-error: true
      if: 'startsWith(github.ref, ''refs/tags/v'') &&

        contains(github.ref, ''-rc.'')

        '
      name: Publish candidate
      run: ./gradlew --stacktrace -Prelease.useLastTag=true candidate codeCoverageReport
        coveralls gitPublishPush dockerPush
    - continue-on-error: true
      if: 'startsWith(github.ref, ''refs/tags/v'') &&

        (!contains(github.ref, ''-rc.''))

        '
      name: Publish release
      run: ./gradlew --stacktrace -Prelease.useLastTag=true final codeCoverageReport
        coveralls gitPublishPush dockerPush
    - continue-on-error: true
      name: Codecov
      uses: codecov/codecov-action@v1
name: Genie Build
on:
  repository_dispatch:
    types: trigger-ga___genie-build.yml
